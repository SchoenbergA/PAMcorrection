}# end of function
# visualize Control and PAM values
estPAMcorr(dat,sortby="PAM")
estPAMcorr <- function(df,cf=NULL,al=-1,modef=T,yl=2,sortby=NULL){
# check input
#mean(ctr/pam)
#if(modef==T & cf>)
# handle sort
if(is.null(sortby)==F){
posby <-which(colnames(df)==sortby)
df <- df[order(df[,posby]),]
cat(paste0("dataframe sorted by ",sortby),sep="/n")
cat(" ",sep = "\n")
al= -1
cat("set 'al' to -1 due to sorting data",sep="/n")
}
# get data
ctr <- df$CTR
pam <- df$PAM
# abs or factor
if(modef==T){
if(missing(cf)){
cf=1
}
cat("using factor for correction",sep="\n")
plot((ctr),col="blue",
ylim=c(0,yl),
main=paste0("PAM Correction factor ",cf),
#sub =paste0("empty yet"),
xlab="ID",
ylab="Value")
points((pam*cf),col="red")
points(pam,col="orange")
lines(ctr,col="blue")
lines(pam*cf,col="red")
lines(pam,col="orange")
div <- ctr-(pam*cf)
lines(abs(div),col="green")
points(abs(div),col="green")
abline(v=al)
# labels
mtext(paste0("absDiffSums: ",round(sum(abs(div)),2)),line = -18, adj = 0.01)
mtext(paste0("absDiffMean: ",round(mean(abs(div)),2)),line = -19, adj = 0.01)
mtext(paste0("absDiffSD: ",round(sd(abs(div)),2)),line = -20, adj = 0.01)
# legend
legend("topleft", legend=c("PAM", "PAM_corrected","Control","Difference"),
col=c("orange","red","blue", "green"), lty=1, cex=0.8)
}
if (modef==F){
if(missing(cf)){
cf=0
}
cat("using absolute value for correction",sep="\n")
plot((ctr),col="blue",
ylim=c(0,yl),
main=paste0("PAM Correction absolut -",cf),
#sub =paste0("empty yet"),
xlab="ID",
ylab="Value")
points((pam-cf),col="red")
points(pam,col="orange")
lines(ctr,col="blue")
lines(pam-cf,col="red")
lines(pam,col="orange")
div <- ctr-(pam-cf)
lines(abs(div),col="green")
points(abs(div),col="green")
abline(v=al)
# labels
mtext(paste0("absDiffSums: ",round(sum(abs(div)),2)),line = -18, adj = 0.01)
mtext(paste0("absDiffMean: ",round(mean(abs(div)),2)),line = -19, adj = 0.01)
mtext(paste0("absDiffSD: ",round(sd(abs(div)),2)),line = -20, adj = 0.01)
# legend
legend("topleft", legend=c("PAM", "PAM_corrected","Control","Difference"),
col=c("orange","red","blue", "green"), lty=1, cex=0.8)
}
}# end of function
# visualize Control and PAM values
estPAMcorr(dat,sortby="PAM")
estPAMcorr <- function(df,cf=NULL,al=-1,modef=T,yl=2,sortby=NULL){
# check input
#mean(ctr/pam)
#if(modef==T & cf>)
# handle sort
if(is.null(sortby)==F){
posby <-which(colnames(df)==sortby)
df <- df[order(df[,posby]),]
cat(paste0("dataframe sorted by ",sortby),sep="\n")
cat(" ",sep = "\n")
al= -1
cat("set 'al' to -1 due to sorting data",sep="\n")
cat(" ",sep = "\n")
}
# get data
ctr <- df$CTR
pam <- df$PAM
# abs or factor
if(modef==T){
if(missing(cf)){
cf=1
}
cat("using factor for correction",sep="\n")
plot((ctr),col="blue",
ylim=c(0,yl),
main=paste0("PAM Correction factor ",cf),
#sub =paste0("empty yet"),
xlab="ID",
ylab="Value")
points((pam*cf),col="red")
points(pam,col="orange")
lines(ctr,col="blue")
lines(pam*cf,col="red")
lines(pam,col="orange")
div <- ctr-(pam*cf)
lines(abs(div),col="green")
points(abs(div),col="green")
abline(v=al)
# labels
mtext(paste0("absDiffSums: ",round(sum(abs(div)),2)),line = -18, adj = 0.01)
mtext(paste0("absDiffMean: ",round(mean(abs(div)),2)),line = -19, adj = 0.01)
mtext(paste0("absDiffSD: ",round(sd(abs(div)),2)),line = -20, adj = 0.01)
# legend
legend("topleft", legend=c("PAM", "PAM_corrected","Control","Difference"),
col=c("orange","red","blue", "green"), lty=1, cex=0.8)
}
if (modef==F){
if(missing(cf)){
cf=0
}
cat("using absolute value for correction",sep="\n")
plot((ctr),col="blue",
ylim=c(0,yl),
main=paste0("PAM Correction absolut -",cf),
#sub =paste0("empty yet"),
xlab="ID",
ylab="Value")
points((pam-cf),col="red")
points(pam,col="orange")
lines(ctr,col="blue")
lines(pam-cf,col="red")
lines(pam,col="orange")
div <- ctr-(pam-cf)
lines(abs(div),col="green")
points(abs(div),col="green")
abline(v=al)
# labels
mtext(paste0("absDiffSums: ",round(sum(abs(div)),2)),line = -18, adj = 0.01)
mtext(paste0("absDiffMean: ",round(mean(abs(div)),2)),line = -19, adj = 0.01)
mtext(paste0("absDiffSD: ",round(sd(abs(div)),2)),line = -20, adj = 0.01)
# legend
legend("topleft", legend=c("PAM", "PAM_corrected","Control","Difference"),
col=c("orange","red","blue", "green"), lty=1, cex=0.8)
}
}# end of function
# visualize Control and PAM values
estPAMcorr(dat,sortby="PAM")
estPAMcorr <- function(df,cf=NULL,al=-1,modef=T,yl=2,sortby=NULL){
# check input
#mean(ctr/pam)
#if(modef==T & cf>)
# handle sort
if(is.null(sortby)==F){
posby <-which(colnames(df)==sortby)
df <- df[order(df[,posby]),]
cat(paste0("dataframe sorted by ",sortby),sep="\n")
cat(" ",sep = "\n")
al= -1
cat("set 'al' to -1 due to sorting data",sep="\n")
cat(" ",sep = "\n")
}
# get data
ctr <- df$CTR
pam <- df$PAM
# abs or factor
if(modef==T){
if(missing(cf)){
cat("using original input PAM (not corrected by function)",sep="\n")
plot((ctr),col="blue",
ylim=c(0,yl),
main=paste0("PAM"),
#sub =paste0("empty yet"),
xlab="ID",
ylab="Value")
#points((pam*cf),col="red")
points(pam,col="orange")
lines(ctr,col="blue")
#lines(pam*cf,col="red")
lines(pam,col="orange")
div <- ctr-(pam)
lines(abs(div),col="green")
points(abs(div),col="green")
abline(v=al)
# labels
mtext(paste0("absDiffSums: ",round(sum(abs(div)),2)),line = -18, adj = 0.01)
mtext(paste0("absDiffMean: ",round(mean(abs(div)),2)),line = -19, adj = 0.01)
mtext(paste0("absDiffSD: ",round(sd(abs(div)),2)),line = -20, adj = 0.01)
# legend
legend("topleft", legend=c("PAM", "Control","Difference"),
col=c("orange","blue", "green"), lty=1, cex=0.8)
cf=1
}
cat("using factor for correction",sep="\n")
plot((ctr),col="blue",
ylim=c(0,yl),
main=paste0("PAM Correction factor ",cf),
#sub =paste0("empty yet"),
xlab="ID",
ylab="Value")
points((pam*cf),col="red")
points(pam,col="orange")
lines(ctr,col="blue")
lines(pam*cf,col="red")
lines(pam,col="orange")
div <- ctr-(pam*cf)
lines(abs(div),col="green")
points(abs(div),col="green")
abline(v=al)
# labels
mtext(paste0("absDiffSums: ",round(sum(abs(div)),2)),line = -18, adj = 0.01)
mtext(paste0("absDiffMean: ",round(mean(abs(div)),2)),line = -19, adj = 0.01)
mtext(paste0("absDiffSD: ",round(sd(abs(div)),2)),line = -20, adj = 0.01)
# legend
legend("topleft", legend=c("PAM", "PAM_corrected","Control","Difference"),
col=c("orange","red","blue", "green"), lty=1, cex=0.8)
}
if (modef==F){
if(missing(cf)){
cf=0
}
cat("using absolute value for correction",sep="\n")
plot((ctr),col="blue",
ylim=c(0,yl),
main=paste0("PAM Correction absolut -",cf),
#sub =paste0("empty yet"),
xlab="ID",
ylab="Value")
points((pam-cf),col="red")
points(pam,col="orange")
lines(ctr,col="blue")
lines(pam-cf,col="red")
lines(pam,col="orange")
div <- ctr-(pam-cf)
lines(abs(div),col="green")
points(abs(div),col="green")
abline(v=al)
# labels
mtext(paste0("absDiffSums: ",round(sum(abs(div)),2)),line = -18, adj = 0.01)
mtext(paste0("absDiffMean: ",round(mean(abs(div)),2)),line = -19, adj = 0.01)
mtext(paste0("absDiffSD: ",round(sd(abs(div)),2)),line = -20, adj = 0.01)
# legend
legend("topleft", legend=c("PAM", "PAM_corrected","Control","Difference"),
col=c("orange","red","blue", "green"), lty=1, cex=0.8)
}
}# end of function
# visualize Control and PAM values
estPAMcorr(dat,sortby="PAM")
estPAMcorr <- function(df,cf=NULL,al=-1,modef=T,yl=2,sortby=NULL){
# check input
#mean(ctr/pam)
#if(modef==T & cf>)
# handle sort
if(is.null(sortby)==F){
posby <-which(colnames(df)==sortby)
df <- df[order(df[,posby]),]
cat(paste0("dataframe sorted by ",sortby),sep="\n")
cat(" ",sep = "\n")
al= -1
cat("set 'al' to -1 due to sorting data",sep="\n")
cat(" ",sep = "\n")
}
# get data
ctr <- df$CTR
pam <- df$PAM
# abs or factor
if(modef==T){
if(missing(cf)){
cat("using original input PAM (not corrected by function)",sep="\n")
plot((ctr),col="blue",
ylim=c(0,yl),
main=paste0("PAM"),
#sub =paste0("empty yet"),
xlab="ID",
ylab="Value")
#points((pam*cf),col="red")
points(pam,col="orange")
lines(ctr,col="blue")
#lines(pam*cf,col="red")
lines(pam,col="orange")
div <- ctr-(pam)
lines(abs(div),col="green")
points(abs(div),col="green")
abline(v=al)
# labels
mtext(paste0("absDiffSums: ",round(sum(abs(div)),2)),line = -18, adj = 0.01)
mtext(paste0("absDiffMean: ",round(mean(abs(div)),2)),line = -19, adj = 0.01)
mtext(paste0("absDiffSD: ",round(sd(abs(div)),2)),line = -20, adj = 0.01)
# legend
legend("topleft", legend=c("PAM", "Control","Difference"),
col=c("orange","blue", "green"), lty=1, cex=0.8)
cf=1
} else {
cat("using factor for correction",sep="\n")
plot((ctr),col="blue",
ylim=c(0,yl),
main=paste0("PAM Correction factor ",cf),
#sub =paste0("empty yet"),
xlab="ID",
ylab="Value")
points((pam*cf),col="red")
points(pam,col="orange")
lines(ctr,col="blue")
lines(pam*cf,col="red")
lines(pam,col="orange")
div <- ctr-(pam*cf)
lines(abs(div),col="green")
points(abs(div),col="green")
abline(v=al)
# labels
mtext(paste0("absDiffSums: ",round(sum(abs(div)),2)),line = -18, adj = 0.01)
mtext(paste0("absDiffMean: ",round(mean(abs(div)),2)),line = -19, adj = 0.01)
mtext(paste0("absDiffSD: ",round(sd(abs(div)),2)),line = -20, adj = 0.01)
# legend
legend("topleft", legend=c("PAM", "PAM_corrected","Control","Difference"),
col=c("orange","red","blue", "green"), lty=1, cex=0.8)
}
}
if (modef==F){
if(missing(cf)){
cf=0
}
cat("using absolute value for correction",sep="\n")
plot((ctr),col="blue",
ylim=c(0,yl),
main=paste0("PAM Correction absolut -",cf),
#sub =paste0("empty yet"),
xlab="ID",
ylab="Value")
points((pam-cf),col="red")
points(pam,col="orange")
lines(ctr,col="blue")
lines(pam-cf,col="red")
lines(pam,col="orange")
div <- ctr-(pam-cf)
lines(abs(div),col="green")
points(abs(div),col="green")
abline(v=al)
# labels
mtext(paste0("absDiffSums: ",round(sum(abs(div)),2)),line = -18, adj = 0.01)
mtext(paste0("absDiffMean: ",round(mean(abs(div)),2)),line = -19, adj = 0.01)
mtext(paste0("absDiffSD: ",round(sd(abs(div)),2)),line = -20, adj = 0.01)
# legend
legend("topleft", legend=c("PAM", "PAM_corrected","Control","Difference"),
col=c("orange","red","blue", "green"), lty=1, cex=0.8)
}
}# end of function
# visualize Control and PAM values
estPAMcorr(dat,sortby="PAM")
# view borders of dialect
estPAMcorr(dat,al = c(9,15,21,36),sortby="PAM")
# use a correction factor
cf <- mean(dat$CTR/dat$PAM)
estPAMcorr(dat,al = c(9,15,21,36),sortby="CTR",cf)
estPAMcorr <- function(df,cf=NULL,al=-1,modef=T,yl=2,sortby=NULL){
# check input
#mean(ctr/pam)
#if(modef==T & cf>)
# handle sort
if(is.null(sortby)==F){
posby <-which(colnames(df)==sortby)
df <- df[order(df[,posby]),]
cat(paste0("dataframe sorted by ",sortby),sep="\n")
al= -1
cat("set 'al' to -1 due to sorting data",sep="\n")
}
# get data
ctr <- df$CTR
pam <- df$PAM
#  using factor
if(modef==T){
# without correction
if(missing(cf)){
cat("using original input PAM (not corrected by function)",sep="\n")
plot((ctr),col="blue",
ylim=c(0,yl),
main=paste0("PAM"),
#sub =paste0("empty yet"),
xlab="ID",
ylab="Value")
#points((pam*cf),col="red")
points(pam,col="orange")
lines(ctr,col="blue")
#lines(pam*cf,col="red")
lines(pam,col="orange")
div <- ctr-(pam)
lines(abs(div),col="green")
points(abs(div),col="green")
abline(v=al)
# labels
mtext(paste0("absDiffSums: ",round(sum(abs(div)),2)),line = -18, adj = 0.01)
mtext(paste0("absDiffMean: ",round(mean(abs(div)),2)),line = -19, adj = 0.01)
mtext(paste0("absDiffSD: ",round(sd(abs(div)),2)),line = -20, adj = 0.01)
# legend
legend("topleft", legend=c("PAM", "Control","Difference"),
col=c("orange","blue", "green"), lty=1, cex=0.8)
} else {
# if cf is given
cat("using factor for correction",sep="\n")
plot((ctr),col="blue",
ylim=c(0,yl),
main=paste0("PAM Correction factor ",cf),
#sub =paste0("empty yet"),
xlab="ID",
ylab="Value")
points((pam*cf),col="red")
points(pam,col="orange")
lines(ctr,col="blue")
lines(pam*cf,col="red")
lines(pam,col="orange")
div <- ctr-(pam*cf)
lines(abs(div),col="green")
points(abs(div),col="green")
abline(v=al)
# labels
mtext(paste0("absDiffSums: ",round(sum(abs(div)),2)),line = -18, adj = 0.01)
mtext(paste0("absDiffMean: ",round(mean(abs(div)),2)),line = -19, adj = 0.01)
mtext(paste0("absDiffSD: ",round(sd(abs(div)),2)),line = -20, adj = 0.01)
# legend
legend("topleft", legend=c("PAM", "PAM_corrected","Control","Difference"),
col=c("orange","red","blue", "green"), lty=1, cex=0.8)
}
}
# using absolut values
if (modef==F){
if(missing(cf)){# without correction
cat("using original input PAM (not corrected by function)",sep="\n")
plot((ctr),col="blue",
ylim=c(0,yl),
main=paste0("PAM"),
#sub =paste0("empty yet"),
xlab="ID",
ylab="Value")
#points((pam-cf),col="red")
points(pam,col="orange")
lines(ctr,col="blue")
#lines(pam-cf,col="red")
lines(pam,col="orange")
div <- ctr-(pam)
lines(abs(div),col="green")
points(abs(div),col="green")
abline(v=al)
# labels
mtext(paste0("absDiffSums: ",round(sum(abs(div)),2)),line = -18, adj = 0.01)
mtext(paste0("absDiffMean: ",round(mean(abs(div)),2)),line = -19, adj = 0.01)
mtext(paste0("absDiffSD: ",round(sd(abs(div)),2)),line = -20, adj = 0.01)
# legend
legend("topleft", legend=c("PAM", "Control","Difference"),
col=c("orange","blue", "green"), lty=1, cex=0.8)
}else {
cat("using absolute value for correction",sep="\n")
plot((ctr),col="blue",
ylim=c(0,yl),
main=paste0("PAM Correction absolut -",cf),
#sub =paste0("empty yet"),
xlab="ID",
ylab="Value")
points((pam-cf),col="red")
points(pam,col="orange")
lines(ctr,col="blue")
lines(pam-cf,col="red")
lines(pam,col="orange")
div <- ctr-(pam-cf)
lines(abs(div),col="green")
points(abs(div),col="green")
abline(v=al)
# labels
mtext(paste0("absDiffSums: ",round(sum(abs(div)),2)),line = -18, adj = 0.01)
mtext(paste0("absDiffMean: ",round(mean(abs(div)),2)),line = -19, adj = 0.01)
mtext(paste0("absDiffSD: ",round(sd(abs(div)),2)),line = -20, adj = 0.01)
# legend
legend("topleft", legend=c("PAM", "PAM_corrected","Control","Difference"),
col=c("orange","red","blue", "green"), lty=1, cex=0.8)
}
}
}# end of function
# visualize Control and PAM values
estPAMcorr(dat,sortby="PAM")
# visualize Control and PAM values
estPAMcorr(dat,sortby="PAM",modef = F)
# visualize Control and PAM values
estPAMcorr(dat,sortby="PAM",modef = F,cf=0.5)
# visualize Control and PAM values
estPAMcorr(dat,sortby="PAM",modef = F,cf=0.5)
estPAMcorr(dat,sortby="PAM",modef = T,cf=0.5)
# visualize Control and PAM values
estPAMcorr(dat,sortby="PAM",modef = F,cf=0.5)
estPAMcorr(dat,sortby="PAM",modef = T,cf=0.5)
# visualize Control and PAM values
estPAMcorr(dat,sortby="PAM",modef = F,cf=0.5)
estPAMcorr(dat,sortby="PAM",modef = T,cf=0.5)
# visualize Control and PAM values
estPAMcorr(dat,sortby="PAM",modef = F,cf=0.5)
estPAMcorr(dat,sortby="PAM",modef = T,cf=0.5)
# visualize Control and PAM values
estPAMcorr(dat,modef = F,cf=0.5)
estPAMcorr(dat,modef = T,cf=0.5)
# visualize Control and PAM values
estPAMcorr(dat,modef = F,cf=0.5)
estPAMcorr(dat,modef = T,cf=0.5)
# visualize Control and PAM values
estPAMcorr(dat,modef = F,cf=0.5)
estPAMcorr(dat,modef = T,cf=0.5)
library(PAMcorrection)
